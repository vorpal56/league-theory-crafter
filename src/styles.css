/* You can add global styles to this file, and also import other style files */
/* @import "~@ng-select/ng-select/themes/material.theme.css"; */
:root {
	--main-radius: 5px;
	--main-padding: 10px;
	--background-main: #070720;
	--background: #222238;
	--background-2: #0b0b23;
	--background-alt: #17172e;
	--background-alt-2: #222238;
	--background-alt-3: #17172e;
	--border-color-grey: #2c2c40;
	--border-color-blue-grey :rgb(66, 104, 146);
	--light-yellow :rgb(225, 205, 146);
	--dark-amber: rgb(154, 123, 67);
	--champion-img-height: 120px;
	--component-header-height : 54px;
	--selector-grid-height: 64px;
	/* --component-header-height : 70px;  */
	/* this is the height of the rune img on the switcher. otherwise it's 52px */
}
/* --------------------------Body changes-------------------------- */
html, body {
	height: 100%;
	/* background-color: var(--background-main); */
	background-color: var(--background-main);
	/* background: linear-gradient(180deg, var(--background-main),#292e49); */
	color:white !important;
	font-family: 'Oxygen', sans-serif;
}
img {
	-khtml-user-select: none;
	-o-user-select: none;
	-moz-user-select: none;
	-webkit-user-select: none;
	user-select: none;
	-webkit-user-drag: none;
	-ms-user-select: none;
	/* user-drag: none;  */
}
/* --------------------------End Body changes-------------------------- */
/* --------------------------Material Changes-------------------------- */
mat-label, input, .mat-checkbox-label {
	font-family: 'Oxygen', sans-serif !important;
}
mat-form-field {
	line-height: 1.5 !important;
	/* max-width:180px; */
}
.mat-form-field-infix {
	width: auto !important;
}
button:focus, :focus {
	outline:none;
}
.center-spinner {
	margin:auto;
}
/* --------------------------End Material Changes-------------------------- */
/* --------------------------Global Component Definitions-------------------------- */
li.item {
	display:inline-block
}
.bg-black {
	background-color:#000;
}
div.item-block {
	display:inline-block;
	vertical-align: middle;
	text-align:center;
	color:white;
	border:1px solid var(--background);
	user-select: none;
	transition: border-color 0.3s ease;
}
div.item-block:hover {
	border-color: rgb(255, 255, 250);
	transition: border-color 0.3s ease;
}
.flex-center {
	display:flex !important;
	justify-content: center;
	align-items: center;
}
.selector-container {
	padding:0px 5px
}
.champion-portrait {
	width:108px;
	height:108px;
}
.inactive-tab {
	cursor:pointer;
	height:42px;
	filter: grayscale(100%);
	opacity: .27;
	transition: ease 0.3s;
}
.inactive-tab:hover {
	transition: ease 0.3s;
	filter:none;
	opacity: 1;
}
img.tab-icon {
	width:42px;
	height:42px;
}
.invisible-item {
	transition: ease 0.15s;
	opacity :0.27
}
.visible-item {
	transition: ease 0.15s;
	opacity: 1
}
.component-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	flex: 0 0 42px;
	height: 42px;
	margin-bottom: 6px;
	padding: 0 10px;
	background-color: var(--background-alt);
	border: 1px solid var(--border-color-grey);
	width:100%;
}
.component-header-grid {
	display:grid;
	height: 42px;
	margin-bottom: 6px;
	grid-template-columns: auto 42px 42px 42px;
	grid-template-rows: 1fr;
	grid-template-areas:
	"component-title epic-monsters-tab rune-tab item-selector-tab";
	grid-gap:10px;
	/* You can switch the order of the tab switcher in the grid template area and columns */
}
span.component-title#component-title {
	grid-area: component-title;
	background-color: var(--background-alt);
}
.component-body {
	width:100%;
	background-color:var(--background);
	display:flex;
	flex-direction: column;
	/* height:100%; */
}
/* --------------------------End Global Component Definitions-------------------------- */
/* --------------------------Grid Container Definitions-------------------------- */
.container-grid-league {
	display: grid;
	height: 100vh;
	grid-template-columns: 2fr 1fr;
	grid-template-rows: 0.3fr 0.5fr 2fr;
	grid-template-areas:
	"champion champion"
	"item-rune-epic-selector inventory"
	"item-rune-epic-selector damage-calc";
	grid-gap: 10px;
	/* background-color: var(--background-main); */
	padding: 75px 0px 15px 0px;
}
@media only screen and (max-width: 767px) {
	.container-grid-league {
	grid-template-columns: auto;
	grid-template-rows: 0.3fr 0.2fr 1.2fr 0.4fr;
	grid-template-areas:
	"champion"
	"inventory"
	"item-rune-epic-selector"
	"damage-calc"
	}
	.champion-portrait {
		width:120px;
		height:120px;
	}
	:root {
		--champion-img-height: 130px;
	}
}
#champion {
	grid-area: champion;
}
/* #navbar {
	grid-area: navbar;
} */
#item-rune-epic-selector {
	grid-area: item-rune-epic-selector;
}
#inventory {
	grid-area: inventory;
	display:flex;
	align-items: center;
	flex-direction: column;
}
#inventory .component-body {
	border: 1px solid var(--border-color-grey);
	height:100%;
}
#damage-calc {
	grid-area: damage-calc;
}
.epic-monsters-tab {
	grid-area: epic-monsters-tab;
	background-color: var(--background);
}
.rune-tab {
	grid-area: rune-tab;
	background-color: var(--background);
}
.item-selector-tab {
	grid-area: item-selector-tab;
	background-color: var(--background);
	/* background-color: var(--background-alt); */
	/* You can comment the height out to connect the tab switcher img to the component-body */
}
/* --------------------------End Grid Container Definitions-------------------------- */
/* --------------------------Tooltips-------------------------- */
.tooltip {
	display:inline-block;
	position:relative;
	border-bottom:1px dotted #666;
	text-align:left;
}
.tooltip .top {
	max-width:200px;
	top:-20px;
	left:50%;
	transform:translate(-50%, -100%);
	padding:10px 20px;
	color:#444444;
	background-color:#EEEEEE;
	font-weight:normal;
	font-size:13px;
	border-radius:8px;
	position:absolute;
	z-index:99999999;
	box-sizing:border-box;
	box-shadow:0 1px 8px rgba(0,0,0,0.5);
	visibility:hidden; opacity:0; transition:opacity 0.8s;
}
.tooltip:hover .top {
	visibility:visible; opacity:1;
}
.tooltip .top i {
	position:absolute;
	top:100%;
	left:50%;
	margin-left:-12px;
	width:24px;
	height:12px;
	overflow:hidden;
}
.tooltip .top i::after {
	content:'';
	position:absolute;
	width:12px;
	height:12px;
	left:50%;
	transform:translate(-50%,-50%) rotate(45deg);
	background-color:#EEEEEE;
	box-shadow:0 1px 8px rgba(0,0,0,0.5);
}
/* --------------------------End Tooltips-------------------------- */
/* --------------------------Scrollbar-------------------------- */
::-webkit-scrollbar {
	width: 10px;
}
::-webkit-scrollbar-track {
	box-shadow: inset 0 0 5px grey;
}
::-webkit-scrollbar-thumb {
	background: grey;
}
/* --------------------------End Scrollbar-------------------------- */
/* --------------------------Orbit Spinner-------------------------- */
.orbit-spinner, .orbit-spinner * {
  box-sizing: border-box;
}
.orbit-spinner {
  height: 140px;
  width: 140px;
  border-radius: 50%;
	perspective: 800px;
}

@media only screen and (max-width: 767px) {
	.orbit-spinner {
		margin: 10px auto;
	}
}

.orbit-spinner .orbit-line {
  position: absolute;
  box-sizing: border-box;
  width: 100%;
  height: 100%;
  border-radius: 50%;
}
.orbit-line {
	border-color: var(--border-color-blue-grey) !important;
	/* border-color: var(--light-yellow) !important; */
}
.orbit-spinner .orbit-line:nth-child(1) {
  left: 0%;
  top: 0%;
  animation: orbit-spinner-orbit-one-animation 1200ms linear infinite;
  border-bottom: 3px solid;
}
.orbit-spinner .orbit-line:nth-child(2) {
  right: 0%;
  top: 0%;
  animation: orbit-spinner-orbit-two-animation 1200ms linear infinite;
  border-right: 3px solid;
}
.orbit-spinner .orbit-line:nth-child(3) {
  right: 0%;
  bottom: 0%;
  animation: orbit-spinner-orbit-three-animation 1200ms linear infinite;
  border-top: 3px solid ;
}
@keyframes orbit-spinner-orbit-one-animation {
  0% {
    transform: rotateX(35deg) rotateY(-45deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(35deg) rotateY(-45deg) rotateZ(360deg);
  }
}
@keyframes orbit-spinner-orbit-two-animation {
  0% {
    transform: rotateX(50deg) rotateY(10deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(50deg) rotateY(10deg) rotateZ(360deg);
  }
}
@keyframes orbit-spinner-orbit-three-animation {
  0% {
    transform: rotateX(35deg) rotateY(55deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(35deg) rotateY(55deg) rotateZ(360deg);
  }
}
/* --------------------------End Orbit Spinner-------------------------- */